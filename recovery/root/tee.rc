on early-init
    # Set the security context of /postinstall if present.
    restorecon /postinstall

    # Copy prebuilt ld.config.txt into linkerconfig directory
    copy /system/etc/ld.config.txt /linkerconfig/ld.config.txt
    chmod 444 /linkerconfig/ld.config.txt

    start ueventd

on init
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /proc/self/fd/0 /dev/stdin
    symlink /proc/self/fd/1 /dev/stdout
    symlink /proc/self/fd/2 /dev/stderr

    symlink /system/bin /bin
    symlink /system/etc /etc

    mount cgroup none /acct cpuacct
    mkdir /acct/uid

    mkdir /sdcard
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /sideload
    mkdir /mnt/system
    mount tmpfs tmpfs /tmp

    chown root shell /tmp
    chmod 0775 /tmp

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/vm/max_map_count 1000000

on boot
    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

on firmware_mounts_complete
   rm /dev/.booting

# Mount filesystems and start core system services.
on late-init
    trigger early-fs
    trigger fs
    trigger post-fs
    trigger post-fs-data

    # Remove a file to wake up anything waiting for firmware
    trigger firmware_mounts_complete

    trigger early-boot
    trigger boot

on init
    # Create the mountpoint for persist partition
    mkdir /mnt/vendor/persist 0771 root root

on post-fs    
    chown system system /mnt/vendor/persist
    chmod 0771 /mnt/vendor/persist

    # We restorecon /mnt/vendor/persist to set SEPolicy label.
    restorecon /mnt/vendor/persist

    # Mount the persist partition on /mnt/vendor/persist
    mount ext4 /dev/block/by-name/persist /mnt/vendor/persist rw

    # Create mcRegistry to store failure record
    mkdir /mnt/vendor/persist/mcRegistry 0771 root root
    
    # Override the mobicore token path and rebel it with proper contexts
    mkdir /mnt/vendor/persist/mobicore 0770 root root
    restorecon /mnt/vendor/persist/mobicore
    
    write /proc/bootprof "MOBICORE: Starting mcDriverDaemon"
    start mobicore

on post-fs-data
    mkdir /data/vendor 0770 system system
    # Create /data/vendor/key_provisioning dir and get proper encryption policy installed
    # Key Installation
    mkdir /data/vendor/key_provisioning 0771 root root

# For META/FACTORY mode
on property:ro.crypto.state=unencrypted
    write /proc/bootprof "MOBICORE: create /data/vendor/mcRegistry ++ (unencrypted)"
    mkdir /data/vendor/mcRegistry 0775 root root
    write /proc/bootprof "MOBICORE: create /data/vendor/mcRegistry -- (unencrypted)"

# Normal mode, FBE
on property:ro.crypto.type=file && property:ro.crypto.state=encrypted
    write /proc/bootprof "MOBICORE: create /data/vendor/mcRegistry ++ (FBE encrypted)"
    mkdir /data/vendor/mcRegistry 0775 root root
    write /proc/bootprof "MOBICORE: create /data/vendor/mcRegistry -- (FBE encrypted)"

# Normal mode, FDE
on property:vold.decrypt=trigger_restart_framework
    write /proc/bootprof "MOBICORE: create /data/vendor/mcRegistry ++ (FDE encrypted)"
    mkdir /data/vendor/mcRegistry 0775 root root
    write /proc/bootprof "MOBICORE: create /data/vendor/mcRegistry -- (FDE encrypted)"

on property:sys.boot_completed=1
    chown system system /data/vendor/mcRegistry/TbStorage/Store_0.tf
    chmod 0600 /data/vendor/mcRegistry/TbStorage/Store_0.tf
    chown system system /data/vendor/mcRegistry/TbStorage
    chmod 0700 /data/vendor/mcRegistry/TbStorage

